{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartItemsState = {\n  items: [],\n  totalQuantity: 0\n};\nconst cartItemsSlice = createSlice({\n  name: 'cart',\n  initialState: initialCartItemsState,\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const cartItemsActions = cartItemsSlice.actions;\nexport default cartItemsSlice.reducer;","map":{"version":3,"names":["createSlice","initialCartItemsState","items","totalQuantity","cartItemsSlice","name","initialState","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","cartItemsActions","actions","reducer"],"sources":["C:/Users/user/Desktop/Web Development/Redux 3/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCartItemsState = {\r\n    items: [],\r\n    totalQuantity: 0,\r\n}\r\n\r\nconst cartItemsSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: initialCartItemsState,\r\n    reducers: {\r\n        replaceCart(state, action) {\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.items = action.payload.items\r\n        },\r\n\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item=> item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            \r\n            if(!existingItem) {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                });\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n            }\r\n\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            const id = action.payload\r\n            const existingItem = state.items.find(item => item.id === id)\r\n            state.totalQuantity--;\r\n            if(existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id)\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\nexport const cartItemsActions = cartItemsSlice.actions;\r\n\r\nexport default cartItemsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,qBAAqB,GAAG;EAC1BC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,cAAc,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEL,qBAAqB;EACnCM,QAAQ,EAAE;IACNC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACN,aAAa,GAAGO,MAAM,CAACC,OAAO,CAACR,aAAa;MAClDM,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO,CAACT,KAAK;IACtC,CAAC;IAEDU,aAAaA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,MAAMG,YAAY,GAAGL,KAAK,CAACP,KAAK,CAACa,IAAI,CAACC,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACpER,KAAK,CAACN,aAAa,EAAE;MAErB,IAAG,CAACW,YAAY,EAAE;QACdL,KAAK,CAACP,KAAK,CAACgB,IAAI,CAAC;UACbD,EAAE,EAAEJ,OAAO,CAACI,EAAE;UACdE,KAAK,EAAEN,OAAO,CAACM,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAER,OAAO,CAACM,KAAK;UACzBd,IAAI,EAAEQ,OAAO,CAACS;QAClB,CAAC,CAAC;MACN,CAAC,MAAM;QACHR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGR,OAAO,CAACM,KAAK;MACrE;IAEJ,CAAC;IACDI,kBAAkBA,CAACd,KAAK,EAAEC,MAAM,EAAE;MAC9B,MAAMO,EAAE,GAAGP,MAAM,CAACC,OAAO;MACzB,MAAMG,YAAY,GAAGL,KAAK,CAACP,KAAK,CAACa,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7DR,KAAK,CAACN,aAAa,EAAE;MACrB,IAAGW,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAE;QAC5BX,KAAK,CAACP,KAAK,GAAGO,KAAK,CAACP,KAAK,CAACsB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACHH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACK,KAAK;MAC1E;IACJ;EACJ;AACJ,CAAC,CAAC;AAKF,OAAO,MAAMM,gBAAgB,GAAGrB,cAAc,CAACsB,OAAO;AAEtD,eAAetB,cAAc,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}