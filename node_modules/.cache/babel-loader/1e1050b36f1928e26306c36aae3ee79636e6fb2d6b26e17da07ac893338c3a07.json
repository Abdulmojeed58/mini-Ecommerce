{"ast":null,"code":"export const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(cartActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const res = await fetch('https://react-http-d5ecc-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!res.ok) {\n        throw new Error('Sending cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(cartActions.showNotification({\n        status: 'success',\n        title: 'Success',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      sendCartData().catch(error => {\n        dispatch(cartActions.showNotification({\n          status: 'error',\n          title: 'Error...',\n          message: 'Sending cart data failed!'\n        }));\n      });\n    }\n  };\n};","map":{"version":3,"names":["sendCartData","cart","dispatch","cartActions","showNotification","status","title","message","sendRequest","res","fetch","method","body","JSON","stringify","ok","Error","error","catch"],"sources":["C:/Users/user/Desktop/Web Development/Redux 3/src/store/cart-action.js"],"sourcesContent":["export const sendCartData = (cart)=> {\r\n    return async (dispatch) => {\r\n        dispatch(cartActions.showNotification({\r\n            status: 'pending',\r\n            title: 'Sending...',\r\n            message: 'Sending cart data!'\r\n          }))\r\n\r\n            const sendRequest = async () => {\r\n\r\n                const res = await fetch('https://react-http-d5ecc-default-rtdb.firebaseio.com/cart.json', {\r\n                    method: 'PUT',\r\n                    body: JSON.stringify(cart)\r\n                  })\r\n            \r\n                  if(!res.ok) {\r\n                    throw new Error('Sending cart data failed')\r\n                  }\r\n            }\r\n\r\n        try {\r\n            await sendRequest()\r\n\r\n            dispatch(cartActions.showNotification({\r\n                status: 'success',\r\n                title: 'Success',\r\n                message: 'Sent cart data successfully!'\r\n              }))\r\n\r\n        } catch(error) {\r\n            sendCartData().catch((error)=>{\r\n                dispatch(cartActions.showNotification({\r\n                  status: 'error',\r\n                  title: 'Error...',\r\n                  message: 'Sending cart data failed!'\r\n                }))\r\n              })\r\n        }\r\n    }\r\n\r\n}"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAIC,IAAI,IAAI;EACjC,OAAO,MAAOC,QAAQ,IAAK;IACvBA,QAAQ,CAACC,WAAW,CAACC,gBAAgB,CAAC;MAClCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CAAC,CAAC;IAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAE5B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gEAAgE,EAAE;QACtFC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAG,CAACQ,GAAG,CAACM,EAAE,EAAE;QACV,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACN,CAAC;IAEL,IAAI;MACA,MAAMR,WAAW,CAAC,CAAC;MAEnBN,QAAQ,CAACC,WAAW,CAACC,gBAAgB,CAAC;QAClCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IAET,CAAC,CAAC,OAAMU,KAAK,EAAE;MACXjB,YAAY,CAAC,CAAC,CAACkB,KAAK,CAAED,KAAK,IAAG;QAC1Bf,QAAQ,CAACC,WAAW,CAACC,gBAAgB,CAAC;UACpCC,MAAM,EAAE,OAAO;UACfC,KAAK,EAAE,UAAU;UACjBC,OAAO,EAAE;QACX,CAAC,CAAC,CAAC;MACL,CAAC,CAAC;IACR;EACJ,CAAC;AAEL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}