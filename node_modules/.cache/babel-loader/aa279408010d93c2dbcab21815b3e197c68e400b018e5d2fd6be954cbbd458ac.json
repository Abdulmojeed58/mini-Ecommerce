{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { cartActions } from \"./cartStore\";\nconst initialCartItemsState = {\n  items: [],\n  totalQuantity: 0\n};\nconst cartItemsSlice = createSlice({\n  name: 'cart',\n  initialState: initialCartItemsState,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(cartActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const res = await fetch('https://react-http-d5ecc-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!res.ok) {\n        throw new Error('Sending cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(cartActions.showNotification({\n        status: 'success',\n        title: 'Success',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      sendCartData().catch(error => {\n        dispatch(cartActions.showNotification({\n          status: 'error',\n          title: 'Error...',\n          message: 'Sending cart data failed!'\n        }));\n      });\n    }\n  };\n};\nexport const cartItemsActions = cartItemsSlice.actions;\nexport default cartItemsSlice.reducer;","map":{"version":3,"names":["createSlice","cartActions","initialCartItemsState","items","totalQuantity","cartItemsSlice","name","initialState","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","res","fetch","method","body","JSON","stringify","ok","Error","error","catch","cartItemsActions","actions","reducer"],"sources":["C:/Users/user/Desktop/Web Development/Redux 3/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { cartActions } from \"./cartStore\";\r\n\r\nconst initialCartItemsState = {\r\n    items: [],\r\n    totalQuantity: 0,\r\n}\r\n\r\nconst cartItemsSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: initialCartItemsState,\r\n    reducers: {\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item=> item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            \r\n            if(!existingItem) {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                });\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n            }\r\n\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            const id = action.payload\r\n            const existingItem = state.items.find(item => item.id === id)\r\n            state.totalQuantity--;\r\n            if(existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id)\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const sendCartData = (cart)=> {\r\n    return async (dispatch) => {\r\n        dispatch(cartActions.showNotification({\r\n            status: 'pending',\r\n            title: 'Sending...',\r\n            message: 'Sending cart data!'\r\n          }))\r\n\r\n            const sendRequest = async () => {\r\n\r\n                const res = await fetch('https://react-http-d5ecc-default-rtdb.firebaseio.com/cart.json', {\r\n                    method: 'PUT',\r\n                    body: JSON.stringify(cart)\r\n                  })\r\n            \r\n                  if(!res.ok) {\r\n                    throw new Error('Sending cart data failed')\r\n                  }\r\n            }\r\n\r\n        try {\r\n            await sendRequest()\r\n\r\n            dispatch(cartActions.showNotification({\r\n                status: 'success',\r\n                title: 'Success',\r\n                message: 'Sent cart data successfully!'\r\n              }))\r\n\r\n        } catch(error) {\r\n            sendCartData().catch((error)=>{\r\n                dispatch(cartActions.showNotification({\r\n                  status: 'error',\r\n                  title: 'Error...',\r\n                  message: 'Sending cart data failed!'\r\n                }))\r\n              })\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const cartItemsActions = cartItemsSlice.actions;\r\n\r\nexport default cartItemsSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}